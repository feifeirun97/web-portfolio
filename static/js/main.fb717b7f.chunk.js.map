{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","TweetBox.js","Post.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","src","onChange","e","target","value","type","placeholder","onClick","preventDefault","collection","add","displayName","username","verified","image","avator","Post","forwardRef","ref","verfiled","fontSize","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","Widgets","tweetId","sourceType","screenName","options","height","url","via","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb717b7f.chunk.js","sourcesContent":["import React from 'react';\nimport './SidebarOption.css'; \n\n\n//Icon是部件所以I大写\nfunction SidebarOption({ active, text, Icon }) {\n  return (\n    <div className= {`sidebarOption ${active && \"sidebarOption--active\"}`}>\n      <Icon />\n      <h2>{ text }</h2>\n    </div>\n  )\n}\n\nexport default SidebarOption;","import React from 'react';\nimport './Sidebar.css';\nimport HomeIcon from '@material-ui/icons/Home';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SidebarOption from './SidebarOption';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { Button } from '@material-ui/core';\n\n\n\nfunction Sidebar() {\n  return(\n    <div className=\"sidebar\">\n      {/* Twitter icon */}\n      <TwitterIcon className=\"sidebar__tweetIcon\"/>\n\n      <SidebarOption text=\"Home\" active Icon={HomeIcon}/>\n      <SidebarOption text=\"Explore\" Icon={SearchIcon} />\n      <SidebarOption text=\"Notifications\" Icon={NotificationsNoneIcon} />\n      <SidebarOption text=\"Messages\" Icon={MailOutlineIcon} />\n      <SidebarOption text=\"Bookmarks\" Icon={BookmarkBorderIcon} />\n      <SidebarOption text=\"Lists\" Icon={ListAltIcon} />\n      <SidebarOption text=\"Profile\" Icon={PermIdentityIcon} />\n      <SidebarOption text=\"More\" Icon={MoreHorizIcon} />\n      \n      {/* SidebarOption */}\n      {/* SidebarOption */}\n      {/* SidebarOption */}\n      {/* SidebarOption */}\n      {/* SidebarOption */}\n      {/* SidebarOption */}\n      {/* SidebarOption */}\n\n      {/* Button -> Tweet */}\n      <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth >Tweet</Button>\n    </div>\n\n  )\n}\n\nexport default Sidebar;","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD_R22HWB4aYT9CuIIKDPWLKHUhJHw8_bo\",\n  authDomain: \"web-twitter-clone.firebaseapp.com\",\n  projectId: \"web-twitter-clone\",\n  storageBucket: \"web-twitter-clone.appspot.com\",\n  messagingSenderId: \"700764848261\",\n  appId: \"1:700764848261:web:255ca6ff227ad8cbf329ec\",\n  measurementId: \"G-W8JXF7V3MD\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nexport default db;","import { Avatar, Button } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './TweetBox.css';\nimport db from './firebase';\n\n//注意是所有内容在form内，表格每一行有自己的空间\n//Avatar是头像库\n//input用的palceholder不是value\nfunction TweetBox() {\n  const [tweetMessage, setTweetMessage] = useState('');\n  const [tweetImage, setTweetImage] = useState('');\n\n  const sendTweet = e =>{\n    //防止刷新\n    e.preventDefault();\n    db.collection('posts').add({\n      displayName: 'Jinyu Yuan',\n      username: 'April.',\n      verified: true,\n      text: tweetMessage,\n      image: tweetImage,\n      avator:\n        \"https://i.pinimg.com/736x/3b/74/bc/3b74bca401101300aba962b2d867a209.jpg\"\n    })\n    \n    //发送后吧value重置\n    setTweetImage('');\n    setTweetMessage('');\n  }\n\n  return (\n    <div className=\"tweetBox\">\n      <form>\n        <div className=\"tweetBox__input\">\n          <Avatar src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Cat03.jpg/481px-Cat03.jpg\" />\n          <input\n            onChange={ e => setTweetMessage(e.target.value) }\n            value={tweetMessage}\n            type=\"text\"\n            placeholder=\"What's happening?\"\n          />\n        </div>\n\n        <input\n          onChange={e => setTweetImage(e.target.value)}\n          value={tweetImage}\n          className=\"tweetBox__imageInput\"\n          type=\"text\"\n          placeholder=\"Optional: Enter image URL\"\n        />\n        {/* type是button自带属性 */}\n        <Button\n          onClick={sendTweet} \n          type=\"submit\" \n          className=\"tweetBox__tweetButton\"\n        >Tweet</Button>\n\n      </form>\n    </div>\n  )\n}\n\nexport default TweetBox;\n","import { Avatar } from '@material-ui/core';\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport React, { forwardRef } from 'react';\nimport './Post.css'\n\n//post的用户名认证账号id 用的span\n//部分icon用了MUI自带参数fontSize=\"small\"\n\n//用到了forwardRef，为了flip move动画\n//key用的text，当不唯一时可以用object id[doc.id]\nconst Post = forwardRef(\n  ({ displayName,username,verfiled,text,image,avator }, ref) => {\n  return (\n    <div className=\"post\" ref={ref}>\n      <div className=\"post__avator\">\n        <Avatar src={avator}/>\n      </div>\n      <div className=\"post__body\">\n        <div className=\"post__header\">\n          <div className=\"post__headerText\">\n            <h3>\n              {displayName}{\"  \"}\n              <span className=\"post__headerUsername\">\n                {verfiled && <VerifiedUserIcon  className=\"post__badge\"/>}\n                @{username}\n              </span>\n            </h3>\n            <div className=\"post__headerDescription\">\n              <p>{text}</p>\n            </div>\n          </div>          \n        </div>\n        <img \n          src={image}\n        />\n        <div className=\"post__footer\">\n          <ChatBubbleOutlineIcon fontSize=\"small\" />\n          <RepeatIcon fontSize=\"small\" />\n          <FavoriteBorderIcon fontSize=\"small\" />\n          <PublishIcon fontSize=\"small\" />\n        </div>\n\n      </div>\n    </div>\n  )\n});\n\nexport default Post;\n","import React, { useState,useEffect } from 'react';\nimport TweetBox from './TweetBox';\nimport Post from './Post';\nimport './Feed.css';\nimport db from './firebase';\nimport FilpMove from 'react-flip-move';\n\n//Header比较简单不需要新开组件了\n//为posts加了一个flipmove动画效果\nfunction Feed() {\n  //[state，改变state的函数]=useState(初始值)\n  const [posts, setPosts] = useState([])\n\n  //onSnapsot监听（来自firebase文档）\n  useEffect(() => {\n    db.collection('posts').onSnapshot(snapshot => {\n      // 把‘posts’集的所有文件【列表】数据都返回出来\n      setPosts(snapshot.docs.map(doc => doc.data()));\n    })\n  }, []);\n\n  return (\n    <div className=\"feed\">\n      {/* Header */}\n      <div className=\"feed__header\">\n        <h2>Home</h2>\n      </div>\n\n      {/* TweetBox */}\n      <TweetBox />\n\n      {/* Post */}\n\n      < FilpMove>\n        {posts.map(post => (\n          //注意map用的是()不是{}，返回的是post list\n          <Post \n            key={post.text}\n            displayName={post.displayName}\n            username={post.username} \n            verfiled={post.verfiled} \n            text={post.text} \n            avator={post.avator} \n            image={post.image} \n          />\n        ))}\n      </FilpMove>\n      \n    </div>\n  )\n}\n\nexport default Feed;\n","import React from 'react';\nimport './Widgets.css';\nimport { \n  TwitterTimelineEmbed,\n  TwitterShareButton,\n  TwitterTweetEmbed\n} from 'react-twitter-embed';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nfunction Widgets() {\n  return(\n    <div className=\"widgets\">\n      <div className=\"widgets__input\">\n        <SearchIcon className=\"widgets__searchIcob\" />\n        <input placeholder=\"Search Twitter\" type=\"text\" />\n      </div>\n\n      <div className=\"widgets__widgetContainer\">\n        <h2>What's happening</h2>\n\n        <TwitterTweetEmbed tweetId={\"933354946111705097\"} />\n\n        <TwitterTimelineEmbed\n          sourceType=\"profile\"\n          screenName=\"CityofSydney\"\n          options={{height: 400}}\n        />\n\n        <TwitterShareButton \n          url=\"https://facebook.com/saurabhnemade\" \n          options={{\n            text: '#reactjs is awesome',\n            via: 'saurabhnemade',\n          }} \n        />\n\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default Widgets;","\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Widgets from './Widgets';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n\n      {/* SideBar */}\n      <Sidebar />\n\n      {/* Feed */}\n      <Feed />\n\n      {/* Widgets */}\n      <Widgets />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}